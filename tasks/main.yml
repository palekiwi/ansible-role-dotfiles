---
- name: Check if dotfiles directory exists.
  ansible.builtin.stat:
    path: "{{ dotfiles_repo_local_dest }}"
  register: df_path

- name: Ensure dotfiles repository is cloned locally.
  when: "not df_path.stat.exists"
  ansible.builtin.git:
    repo: "{{ dotfiles_repo }}"
    dest: "{{ dotfiles_repo_local_dest }}"
    version: "{{ dotfiles_repo_version }}"
    accept_hostkey: "{{ dotfiles_repo_accept_hostkey }}"

- name: Ensure all configured dotfiles are links.
  ansible.builtin.command:
    cmd: "ls -F {{ item.dest }}"
  loop: "{{ dotfiles_files }}"
  changed_when: false
  check_mode: false
  failed_when: false
  register: existing_dotfiles_info
  loop_control:
    label: "{{ item.dest }}"

- name: Remove existing file if a replacement is being linked.
  ansible.builtin.file:
    path: "{{ dotfiles_files[index]['dest'] }}"
    state: absent
  when: "'@' not in item['stdout']"
  loop: "{{ existing_dotfiles_info.results }}"
  loop_control:
    index_var: index
    label: "{{ item.stdout }}"

- name: Create links.
  block:
    - name: Ensure all directories exist.
      ansible.builtin.file:
        path: "{{ item.dest | dirname }}"
        state: directory
        mode: "0755"
      loop: "{{ dotfiles_files }}"
      loop_control:
        label: "{{ item.dest }}"
      tags: mkdir

    - name: Link dotfiles.
      ansible.builtin.file:
        src: "{{ dotfiles_repo_local_dest }}/{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
      loop: "{{ dotfiles_files }}"
      loop_control:
        label: "{{ item.dest }}"
      tags: link

    - name: Ensure dotfiles template directory exists.
      ansible.builtin.file:
        path: "{{ dotfiles_record_dir }}"
        state: directory
        mode: "0755"
      tags: template

    - name: Install dotfiles template.
      ansible.builtin.template:
        src: templates/dotfiles.j2
        dest: "{{ dotfiles_record_dir }}/{{ ansible_hostname }}"
        mode: "0644"
        force: true
      tags: template

- name: Clone extra repos.
  ansible.builtin.git:
    repo: "{{ item.repo }}"
    dest: "{{ item.dest }}"
    depth: 1
    version: "{{ item.version }}"
  loop: "{{ dotfiles_extra_repos }}"
